#ifndef _PANDA_H
#define _PANDA_H

#include "stdafx.h"
#include "sqlite3.h"
#include "cKronik.h"
#include "MSReader.h"
#include "Spectrum.h"
#include <vector>

using namespace std;

typedef struct PPID{
  int charge;
  float firstRT;
  float lastRT;
  float intensity;
  double monoMass;
  double BIP;
} PPID;

typedef struct MassList{
  float firstRT;
  float lastRT;
  double mz;
} MassList;

typedef struct MassList2{
  float firstRT;
  float lastRT;
  char mz[8];
} MassList2;

class CPAnDA{
public:
	//Constructors:
	CPAnDA();

	//Accessors
	MassList GetMassList(int pos);
	int GetSelectedPPID();
	int GetTotalPPID();


	//Modifiers
	void SetDatabase(char *db);
	void SetHardklorData(char *hk);
	void SetMassList(char *ml);
	void SetMinimumThreshold(int min);
	void SetMS2Data(char *ms2);
	void SetRTWindow(float rt);

	void GoPAnDA(); //(char *dbName, char *hkFile, char *ms2File, char *MassList, int MinCount, int &TotPPID, int &MatchSize);
	virtual unsigned int ThreadProc(void *obj);

protected:
private:
	//internal parameters
	char database[256];
	char hkFile[256];
	char ms2File[256];
	char massList[256];
	float RTWindow;		//in minutes
	int MimimumThreshold;

	//PAnDA results
	int TotalPPID;
	int SelectedPPID;
	vector<MassList> vList;

	//Functions
	bool CreateDB(char *dbName);
	bool AddKronik(char *dbName, char *hkFile);
	bool AddMS2(char *dbName, char *ms2File);
	bool ReadDB(char *dbName);

	//Temporary
	//int logCounter;
	//void DoEvents();
	bool GenerateList(char *dbName, char *listName, int MinCount, int &TotPPID, int &MatchSize);

};

#endif